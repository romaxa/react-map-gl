{"version":3,"sources":["../../../../src/utils/transition/linear-interpolator.js"],"names":["WebMercatorViewport","assert","TransitionInterpolator","isValid","lerp","getEndValueByShortestPath","VIEWPORT_TRANSITION_PROPS","LinearInterpolator","constructor","opts","Array","isArray","transitionProps","propNames","around","initializeProps","startProps","endProps","startViewportProps","endViewportProps","Object","assign","aroundLngLat","unproject","key","startValue","endValue","start","end","interpolateProps","t","viewport","getMapCenterByLngLatPosition","lngLat","pos","longitude","latitude"],"mappings":"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","sourcesContent":["import WebMercatorViewport from 'viewport-mercator-project';\n\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {isValid, lerp, getEndValueByShortestPath} from './transition-utils';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\n/**\n * Performs linear interpolation of two viewports.\n*/\nexport default class LinearInterpolator extends TransitionInterpolator {\n\n  /**\n   * @param opts {Object}\n   *  - opts.transitionProps {Array}] - list of props to apply linear transition to.\n   *  - opts.around {Array} - a screen point to zoom/rotate around\n   */\n  constructor(opts = {}) {\n    super();\n\n    if (Array.isArray(opts)) {\n      // backward compatibility\n      opts = {transitionProps: opts};\n    }\n\n    this.propNames = opts.transitionProps || VIEWPORT_TRANSITION_PROPS;\n    this.around = opts.around;\n  }\n\n  initializeProps(startProps, endProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    if (this.around) {\n      Object.assign(endViewportProps, endProps, {\n        around: this.around,\n        aroundLngLat: new WebMercatorViewport(endProps).unproject(this.around)\n      });\n    }\n\n    for (const key of this.propNames) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key of this.propNames) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    if (endProps.around) {\n      // zoom around provided point\n      const [longitude, latitude] = new WebMercatorViewport(Object.assign({}, endProps, viewport))\n        .getMapCenterByLngLatPosition({\n          lngLat: endProps.aroundLngLat,\n          pos: endProps.around\n        });\n      viewport.longitude = longitude;\n      viewport.latitude = latitude;\n    }\n\n    return viewport;\n  }\n\n}\n"],"file":"linear-interpolator.js"}