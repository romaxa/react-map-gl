{"version":3,"sources":["../../../../src/utils/transition/linear-interpolator.js"],"names":["WebMercatorViewport","assert","TransitionInterpolator","isValid","lerp","getEndValueByShortestPath","VIEWPORT_TRANSITION_PROPS","LinearInterpolator","opts","Array","isArray","transitionProps","propNames","around","startProps","endProps","startViewportProps","endViewportProps","Object","assign","aroundLngLat","unproject","key","startValue","endValue","start","end","t","viewport","getMapCenterByLngLatPosition","lngLat","pos","longitude","latitude"],"mappings":"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","sourcesContent":["import WebMercatorViewport from 'viewport-mercator-project';\n\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {isValid, lerp, getEndValueByShortestPath} from './transition-utils';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\n/**\n * Performs linear interpolation of two viewports.\n*/\nexport default class LinearInterpolator extends TransitionInterpolator {\n\n  /**\n   * @param opts {Object}\n   *  - opts.transitionProps {Array}] - list of props to apply linear transition to.\n   *  - opts.around {Array} - a screen point to zoom/rotate around\n   */\n  constructor(opts = {}) {\n    super();\n\n    if (Array.isArray(opts)) {\n      // backward compatibility\n      opts = {transitionProps: opts};\n    }\n\n    this.propNames = opts.transitionProps || VIEWPORT_TRANSITION_PROPS;\n    this.around = opts.around;\n  }\n\n  initializeProps(startProps, endProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    if (this.around) {\n      Object.assign(endViewportProps, endProps, {\n        around: this.around,\n        aroundLngLat: new WebMercatorViewport(endProps).unproject(this.around)\n      });\n    }\n\n    for (const key of this.propNames) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key of this.propNames) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    if (endProps.around) {\n      // zoom around provided point\n      const [longitude, latitude] = new WebMercatorViewport(Object.assign({}, endProps, viewport))\n        .getMapCenterByLngLatPosition({\n          lngLat: endProps.aroundLngLat,\n          pos: endProps.around\n        });\n      viewport.longitude = longitude;\n      viewport.latitude = latitude;\n    }\n\n    return viewport;\n  }\n\n}\n"],"file":"linear-interpolator.js"}