{"version":3,"sources":["../../../src/components/marker.js"],"names":["propTypes","Object","assign","DraggableControl","className","PropTypes","string","longitude","number","isRequired","latitude","offsetLeft","offsetTop","draggable","bool","onDrag","func","onDragEnd","onDragStart","defaultProps","Marker","props","state","dragPos","dragOffset","_getDraggedPosition","_context","viewport","project","x","y","containerStyle","position","left","top","ref","_containerRef","style","children","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAmBA;;AACA;;AACA;;AArBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAMA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,0BAAiBH,SAAnC,EAA8C;AAC9D;AACAI,EAAAA,SAAS,EAAEC,mBAAUC,MAFyC;AAG9D;AACAC,EAAAA,SAAS,EAAEF,mBAAUG,MAAV,CAAiBC,UAJkC;AAK9D;AACAC,EAAAA,QAAQ,EAAEL,mBAAUG,MAAV,CAAiBC,UANmC;AAO9D;AACAE,EAAAA,UAAU,EAAEN,mBAAUG,MARwC;AAS9D;AACAI,EAAAA,SAAS,EAAEP,mBAAUG,MAVyC;AAW9D;AACAK,EAAAA,SAAS,EAAER,mBAAUS,IAZyC;AAa9DC,EAAAA,MAAM,EAAEV,mBAAUW,IAb4C;AAc9DC,EAAAA,SAAS,EAAEZ,mBAAUW,IAdyC;AAe9DE,EAAAA,WAAW,EAAEb,mBAAUW;AAfuC,CAA9C,CAAlB;AAkBA,IAAMG,YAAY,GAAGlB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,0BAAiBgB,YAAnC,EAAiD;AACpEf,EAAAA,SAAS,EAAE,EADyD;AAEpEO,EAAAA,UAAU,EAAE,CAFwD;AAGpEC,EAAAA,SAAS,EAAE;AAHyD,CAAjD,CAArB;AAMA;;;;;;;;IAOqBQ,M;;;;;;;;;;;;8BACT;AAAA,wBACwD,KAAKC,KAD7D;AAAA,UACDjB,SADC,eACDA,SADC;AAAA,UACUG,SADV,eACUA,SADV;AAAA,UACqBG,QADrB,eACqBA,QADrB;AAAA,UAC+BC,UAD/B,eAC+BA,UAD/B;AAAA,UAC2CC,SAD3C,eAC2CA,SAD3C;AAAA,wBAEsB,KAAKU,KAF3B;AAAA,UAEDC,OAFC,eAEDA,OAFC;AAAA,UAEQC,UAFR,eAEQA,UAFR;;AAAA,iBAIOD,OAAO,GACpB,KAAKE,mBAAL,CAAyBF,OAAzB,EAAkCC,UAAlC,CADoB,GAEpB,KAAKE,QAAL,CAAcC,QAAd,CAAuBC,OAAvB,CAA+B,CAACrB,SAAD,EAAYG,QAAZ,CAA/B,CANM;AAAA;AAAA,UAIDmB,CAJC;AAAA,UAIEC,CAJF;;AAQR,UAAMC,cAAc,GAAG;AACrBC,QAAAA,QAAQ,EAAE,UADW;AAErBC,QAAAA,IAAI,EAAEJ,CAAC,GAAGlB,UAFW;AAGrBuB,QAAAA,GAAG,EAAEJ,CAAC,GAAGlB;AAHY,OAAvB;AAMA,aAAO,0BAAc,KAAd,EAAqB;AAC1BR,QAAAA,SAAS,4BAAqBA,SAArB,CADiB;AAE1B+B,QAAAA,GAAG,EAAE,KAAKC,aAFgB;AAG1BC,QAAAA,KAAK,EAAEN,cAHmB;AAI1BO,QAAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWiB;AAJK,OAArB,CAAP;AAMD;;;EArBiCnC,yB;;;AAyBpCiB,MAAM,CAACmB,WAAP,GAAqB,QAArB;AACAnB,MAAM,CAACpB,SAAP,GAAmBA,SAAnB;AACAoB,MAAM,CAACD,YAAP,GAAsBA,YAAtB","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport DraggableControl from './draggable-control';\n\nconst propTypes = Object.assign({}, DraggableControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number,\n  // Drag and Drop props\n  draggable: PropTypes.bool,\n  onDrag: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDragStart: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, DraggableControl.defaultProps, {\n  className: '',\n  offsetLeft: 0,\n  offsetTop: 0\n});\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the marker's position when the parent re-renders.\n */\nexport default class Marker extends DraggableControl {\n  _render() {\n    const {className, longitude, latitude, offsetLeft, offsetTop} = this.props;\n    const {dragPos, dragOffset} = this.state;\n\n    const [x, y] = dragPos ?\n      this._getDraggedPosition(dragPos, dragOffset) :\n      this._context.viewport.project([longitude, latitude]);\n\n    const containerStyle = {\n      position: 'absolute',\n      left: x + offsetLeft,\n      top: y + offsetTop\n    };\n\n    return createElement('div', {\n      className: `mapboxgl-marker ${className}`,\n      ref: this._containerRef,\n      style: containerStyle,\n      children: this.props.children\n    });\n  }\n\n}\n\nMarker.displayName = 'Marker';\nMarker.propTypes = propTypes;\nMarker.defaultProps = defaultProps;\n"],"file":"marker.js"}